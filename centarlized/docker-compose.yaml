version: '3'
services:
  loki:
    image: grafana/loki:3.2.1
    ports:
      - "3100:3100"
      - 7946
      - 9095
    command: -config.file=/etc/loki/config.yaml
    volumes:
      - ./loki-blob-archive.yaml:/etc/loki/config.yaml
      - lokidata:/loki
    networks:
      - grafanet

  mimir:
    #container_name: mimir
    image: grafana/mimir:latest
    ports:
      - "9009:9009"
    command: --config.file=/etc/mimir/demo.yaml
    volumes:
      - ./demo.yaml:/etc/mimir/demo.yaml
      - mimirdata:/tmp/mimir
    networks:
      - grafanet

  prometheus:
   image: prom/prometheus:latest
   command:
     - "--config.file=/etc/prometheus/prometheus.yml"
     - "--web.enable-remote-write-receiver"
     - "--web.console.libraries=/etc/prometheus/console_libraries"
   ports:
     - "9090:9090"
   volumes:
     - ./prometheus.yaml:/etc/prometheus/prometheus.yml
     - prometheusdata:/prometheus
   networks:
     - grafanet

  grafana:
    image: grafana/grafana:11.3.0
    ports:
      - "80:3000"

    volumes:
      - ./grafana.ini:/etc/grafana/grafana.ini
      - grafanadata:/var/lib/grafana

    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    networks:
      - grafanet
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
        - name: Loki
          type: loki
          access: proxy
          orgId: 1
          url: http://loki:3100
          basicAuth: false
          isDefault: false
          version: 1
          editable: false

        - name: mimir
          type: prometheus
          access: proxy
          orgId: 1
          url: http://mimir:9009/prometheus
          basicAuth: false
          isDefault: false
          version: 1
          editable: false

        EOF
        /run.sh

networks:
  grafanet : {}

volumes:
  lokidata:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: ./volumes/loki

  mimirdata:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: ./volumes/mimir
  prometheusdata:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: ./volumes/prometheus
  grafanadata:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: ./volumes/grafana